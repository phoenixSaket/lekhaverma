{"version":3,"sources":["Images/lekhaAvatar.png","Components/Side.js","Components/AboutMe.js","Components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Side","className","alt","src","require","style","paddingRight","Button","variant","AboutMe","Portfolio","App","Container","size","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","console","log","window","innerWidth","scrollTo","document","body","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+LAAAA,EAAOC,QAAU,IAA0B,yC,2KCwC5BC,MApCf,WACE,OACE,yBAAKC,UAAU,uBACb,yBACEA,UAAU,eACVC,IAAI,SACJC,IAAKC,EAAQ,MAEf,yBAAKH,UAAU,YAAf,eAGA,yBAAKA,UAAU,kBAAf,iCAGA,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAcI,MAAO,CAAEC,aAAc,UADpD,kBAIA,yBAAKL,UAAU,aACb,uBAAGA,UAAU,iBAAiBI,MAAO,CAAEC,aAAc,UADvD,2BAIA,yBAAKL,UAAU,mBACb,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,qBAEf,yBAAKA,UAAU,kBACb,kBAACM,EAAA,EAAD,CAAQC,QAAQ,UAAhB,kB,MCZOC,MAjBf,WACE,OACE,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,SACb,yCAEF,yBAAKA,UAAU,oBAAf,yU,MCWSS,MAjBf,WACE,OACE,yBAAKT,UAAU,sBACb,yBAAKA,UAAU,SACb,0CAEF,yBAAKA,UAAU,wBAAf,yUC6ESU,MA/Ef,WAEE,OACE,yBAAKV,UAAU,OACb,kBAACW,EAAA,EAAD,CAAWX,UAAU,gBAAgBY,KAAK,MACxC,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKd,UAAU,WAC5B,kBAACa,EAAA,EAAOE,MAAR,oBAQA,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,eAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,aAAanB,UAAU,wBACzC,kBAACoB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CACEC,QAAS,WACPC,QAAQC,IAAIC,OAAOC,YACfD,OAAOC,WAAa,IACtBD,OAAOE,SAASC,SAASC,KAAM,EAAG,MACzBJ,OAAOC,WAAa,KAAOD,OAAOC,WAAa,KACxDD,OAAOE,SAASC,SAASC,KAAM,IAAK,QAN1C,SAaA,kBAACT,EAAA,EAAIC,KAAL,CAEEC,QAAS,WAEHG,OAAOC,WAAa,KACtBD,OAAOE,SAASC,SAASC,KAAM,IAAK,MAC3BJ,OAAOC,YAAc,MAAQD,OAAOC,WAAa,IAC1DD,OAAOE,SAASC,SAASC,KAAM,IAAK,MAC3BJ,OAAOC,WAAa,KAAOD,OAAOC,YAAc,IACzDD,OAAOE,SAASC,SAASC,KAAM,IAAK,MAC3BJ,OAAOC,WAAa,KAAOD,OAAOC,YAAc,IACzDD,OAAOE,SAASC,SAASC,KAAM,IAAK,GAC3BJ,OAAOC,WAAa,KAAOD,OAAOC,YAAc,IACzDD,OAAOE,SAASC,SAASC,KAAM,IAAK,GAC3BJ,OAAOC,WAAa,KAAOD,OAAOC,WAAa,KACxDD,OAAOE,SAASC,SAASC,KAAM,IAAK,KAf1C,gBAwBN,yBAAK7B,UAAU,uBACb,yBAAKA,UAAU,wBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,cACb,yBAAKmB,GAAG,UAAUnB,UAAU,uCAC1B,kBAAC,EAAD,OAEF,yBAAKA,UAAU,yCACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,yCAET,yBAAKA,UAAU,yCAEf,yBAAKA,UAAU,8CChEb8B,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFR,SAASS,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.d376ab6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lekhaAvatar.38c49bc4.png\";","import React from 'react';\r\nimport \"./Side.css\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Side() {\r\n  return (\r\n    <div className=\"main-side-container\">\r\n      <img\r\n        className=\"avatar-image\"\r\n        alt=\"Avatar\"\r\n        src={require(\"../Images/lekhaAvatar.png\")}\r\n      />\r\n      <div className=\"sideName\">\r\n        Lekha Verma\r\n      </div>\r\n      <div className=\"sideProfession\">\r\n        Architect , Interior Designer\r\n      </div>\r\n      <div className=\"sidePhone\">\r\n        <i className=\"fa fa-phone\" style={{ paddingRight: '10px' }}></i>\r\n        +91-7972386165\r\n      </div>\r\n      <div className=\"sideEmail\" >\r\n        <i className=\"fa fa-envelope\" style={{ paddingRight: '10px' }}></i>\r\n        ar.lekhaverma@gmail.com\r\n      </div>\r\n      <div className=\"sideSocialMedia\">\r\n        <i className=\"fa fa-facebook\"></i>\r\n        <i className=\"fa fa-linkedin\"></i>\r\n        <i className=\"fa fa-instagram\"></i>\r\n      </div>\r\n      <div className=\"sideDownloader\">\r\n        <Button variant=\"custom\">\r\n          DOWNLOAD CV\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Side;","import React from 'react';\r\nimport './AboutMe.css';\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <div className=\"aboutMeContainer\">\r\n      <div className=\"title\">\r\n        <h3>ABOUT ME</h3>\r\n      </div>\r\n      <div className=\"aboutDescription\">\r\n        Hey, my name is Lekha Verma and I am an Architect with 10+ years\r\n        experience in Construction and Development businesses. As a graphic\r\n        and Rendering lead for major design projects I was responsible for\r\n        Organization and coordination of all design documents, drawings, and\r\n        specifications, including all engineering disciplines.\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport './Portfolio.css';\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <div className=\"portfolioContainer\">\r\n      <div className=\"title\">\r\n        <h3>PORTFOLIO</h3>\r\n      </div>\r\n      <div className=\"portfolioDescription\">\r\n        Hey, my name is Lekha Verma and I am an Architect with 10+ years\r\n        experience in Construction and Development businesses. As a graphic\r\n        and Rendering lead for major design projects I was responsible for\r\n        Organization and coordination of all design documents, drawings, and\r\n        specifications, including all engineering disciplines.\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\nimport './App.css';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport Side from './Components/Side';\nimport AboutMe from './Components/AboutMe';\nimport Portfolio from './Components/Portfolio';\n\nfunction App() {\n  // console.log(document.getElementById(AboutMe));\n  return (\n    <div className=\"App\">\n      <Container className=\"mainContainer\" size=\"xl\">\n        <Navbar expand=\"sm\" className=\"shadows\">\n          <Navbar.Brand>\n            {/* <img\n              alt=\"Logo\"\n              src={require(\"./Images/lekhaAvatar.png\")}\n              style={{ width: '40x', height: '40px', marginRight: '10px', borderRadius: \"0%\" }}\n            /> */}\n            Lekha Verma\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"top-navbar\" />\n          <Navbar.Collapse id=\"top-navbar\" className=\" justify-content-end\">\n            <Nav>\n              <Nav.Link\n                onClick={() => {\n                  console.log(window.innerWidth);\n                  if (window.innerWidth > 992) {\n                    window.scrollTo(document.body, 0, 1250)\n                  } else if (window.innerWidth < 992 && window.innerWidth > 300) {\n                    window.scrollTo(document.body, 520, 1250)\n                  }\n                }\n                }\n              >\n                About\n            </Nav.Link>\n              <Nav.Link\n                // href=\"#AboutMe\"\n                onClick={() => {\n                  // console.log(window.innerWidth);\n                  if( window.innerWidth > 1024 ) {\n                    window.scrollTo(document.body, 270, 1250)\n                  } else if (window.innerWidth <= 1024 && window.innerWidth > 992) {\n                    window.scrollTo(document.body, 295, 1250)\n                  } else if (window.innerWidth < 992 && window.innerWidth >= 768) {\n                    window.scrollTo(document.body, 790, 1250)\n                  } else if (window.innerWidth < 768 && window.innerWidth >= 425) {\n                    window.scrollTo(document.body, 890, 0)\n                  } else if (window.innerWidth < 425 && window.innerWidth >= 375) {\n                    window.scrollTo(document.body, 915, 0)\n                  } else if (window.innerWidth < 375 && window.innerWidth > 300) {\n                    window.scrollTo(document.body, 980, 0)\n                  }\n                }}\n              >\n                Portfolio\n            </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"mainContainer-inner\">\n          <div className=\"side shadows dark-bg\">\n            <Side />\n          </div>\n          <div className=\"right-side\">\n            <div id=\"AboutMe\" className=\"aboutMe cardCustom shadows white-bg\">\n              <AboutMe />\n            </div>\n            <div className=\"portfolio shadows cardCustom white-bg\">\n              <Portfolio />\n            </div>\n            <div className=\"portfolio shadows blankCard white-bg\">\n              {/* Portfolio */}\n            </div><div className=\"portfolio shadows blankCard white-bg\">\n              {/* Portfolio */}\n            </div><div className=\"portfolio shadows blankCard white-bg\">\n              {/* Portfolio */}\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}